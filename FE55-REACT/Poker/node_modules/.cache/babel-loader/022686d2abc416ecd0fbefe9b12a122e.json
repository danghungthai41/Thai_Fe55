{"ast":null,"code":"let initialState = {\n  playerList: [{\n    username: \"Player 1\",\n    email: \"player1@gmail.com\",\n    phone: \"1829839030\",\n    totalPoint: 25000,\n    cards: []\n  }, {\n    username: \"Player 2\",\n    email: \"player2@gmail.com\",\n    phone: \"8849839939\",\n    totalPoint: 25000,\n    cards: []\n  }, {\n    username: \"Player 3\",\n    email: \"player3@gmail.com\",\n    phone: \"894589485\",\n    totalPoint: 25000,\n    cards: []\n  }]\n};\n\nconst reducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case \"ADD_PLAYER\":\n      state.playerList = [...state.playerList, payload];\n      return { ...state\n      };\n\n    case \"DRAW_CARDS\":\n      const totalPlayer = state.playList.length;\n      const clonePlayerList = [...state.playList];\n\n      for (let index in payload) {\n        const playerIndex = index % totalPlayer; // state.payload.cards.push(card);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mac/Downloads/Poker/src/redux/reducers/player.js"],"names":["initialState","playerList","username","email","phone","totalPoint","cards","reducer","state","type","payload","totalPlayer","playList","length","clonePlayerList","index","playerIndex"],"mappings":"AAAA,IAAIA,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,CACV;AACEC,IAAAA,QAAQ,EAAE,UADZ;AAEEC,IAAAA,KAAK,EAAE,mBAFT;AAGEC,IAAAA,KAAK,EAAE,YAHT;AAIEC,IAAAA,UAAU,EAAE,KAJd;AAKEC,IAAAA,KAAK,EAAE;AALT,GADU,EAQV;AACEJ,IAAAA,QAAQ,EAAE,UADZ;AAEEC,IAAAA,KAAK,EAAE,mBAFT;AAGEC,IAAAA,KAAK,EAAE,YAHT;AAIEC,IAAAA,UAAU,EAAE,KAJd;AAKEC,IAAAA,KAAK,EAAE;AALT,GARU,EAeV;AACEJ,IAAAA,QAAQ,EAAE,UADZ;AAEEC,IAAAA,KAAK,EAAE,mBAFT;AAGEC,IAAAA,KAAK,EAAE,WAHT;AAIEC,IAAAA,UAAU,EAAE,KAJd;AAKEC,IAAAA,KAAK,EAAE;AALT,GAfU;AADK,CAAnB;;AA0BA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuB;AAAES,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAvB,KAA6C;AAC3D,UAAQD,IAAR;AACE,SAAK,YAAL;AAEAD,MAAAA,KAAK,CAACP,UAAN,GAAmB,CAAC,GAAGO,KAAK,CAACP,UAAV,EAAsBS,OAAtB,CAAnB;AACA,aAAO,EAAC,GAAGF;AAAJ,OAAP;;AACA,SAAK,YAAL;AACE,YAAMG,WAAW,GAAGH,KAAK,CAACI,QAAN,CAAeC,MAAnC;AACN,YAAMC,eAAe,GAAG,CAAC,GAAGN,KAAK,CAACI,QAAV,CAAxB;;AACM,WAAI,IAAIG,KAAR,IAAiBL,OAAjB,EAAyB;AACvB,cAAMM,WAAW,GAAGD,KAAK,GAAGJ,WAA5B,CADuB,CAEvB;AAED;;AACH;AACE,aAAOH,KAAP;AAdJ;AAgBD,CAjBD;;AAmBA,eAAeD,OAAf","sourcesContent":["let initialState = {\r\n  playerList: [\r\n    {\r\n      username: \"Player 1\",\r\n      email: \"player1@gmail.com\",\r\n      phone: \"1829839030\",\r\n      totalPoint: 25000,\r\n      cards: [],\r\n    },\r\n    {\r\n      username: \"Player 2\",\r\n      email: \"player2@gmail.com\",\r\n      phone: \"8849839939\",\r\n      totalPoint: 25000,\r\n      cards: [],\r\n    },\r\n    {\r\n      username: \"Player 3\",\r\n      email: \"player3@gmail.com\",\r\n      phone: \"894589485\",\r\n      totalPoint: 25000,\r\n      cards: [],\r\n    },\r\n  ],\r\n};\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case \"ADD_PLAYER\": \r\n\r\n    state.playerList = [...state.playerList, payload];\r\n    return {...state};\r\n    case \"DRAW_CARDS\":\r\n      const totalPlayer = state.playList.length;\r\nconst clonePlayerList = [...state.playList];\r\n      for(let index in payload){\r\n        const playerIndex = index % totalPlayer;\r\n        // state.payload.cards.push(card);\r\n\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}