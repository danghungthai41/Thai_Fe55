{"ast":null,"code":"let initialState = {\n  deckCard: {}\n};\n\nconst reducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case \"FETCH_DECK_CARD\":\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/mac/Downloads/Poker/src/redux/reducers/card.js"],"names":["initialState","deckCard","reducer","state","type","payload"],"mappings":"AAAA,IAAIA,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE;AADO,CAAnB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuB;AAAEI,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAvB,KAA6C;AAC3D,UAAQD,IAAR;AACE,SAAK,iBAAL;AACE,aAAO,EAAC,GAAGD;AAAJ,OAAP;;AACF;AACE,aAAOA,KAAP;AAJJ;AAMD,CAPD;;AASA,eAAeD,OAAf","sourcesContent":["let initialState = {\r\n  deckCard: {},\r\n};\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case \"FETCH_DECK_CARD\":\r\n      return {...state};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}