{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Downloads/Poker/src/pages/Home/index.jsx\";\nimport React, { useState } from \"react\";\nimport Game from \"../Game\";\nimport { useFormik } from \"formik\";\nimport { connect } from \"react-redux\";\nimport { createAction } from \"../../redux/actions\";\nimport * as yup from \"yup\";\nconst userSchema = yup.object().shape({\n  username: yup.string().required(\"This field is required\"),\n  email: yup.string().required(\"This field is required\").email(\"Email is invalid\"),\n  phone: yup.string().required(\"This field is required\").matches(/^[0-9]+$/, \"Your phone have to contain numbers\")\n});\n/*\r\nTODOLIST\r\n1. Xử lý form, lấy info người dùng nhập\r\n2. dispatch action, push user into playerLisst,\r\n3. Hiện màn hình game, ẩn form\r\n\r\nCÁC THƯ VIỆN FORM: formik, redux-form,...\r\nvalidation: yup, joi, validators,...\r\n*/\n\nconst Home = props => {\n  const [isStarted, setIsStarted] = useState(false); // const [form, setForm] = useState({\n  // username: \"\",\n  // email: \"\",\n  // phone: \"\",\n  // totalPoint: 25000,\n  // cards: [],\n  // });\n  // const handleChange = (event) => {\n  //   setForm({\n  //     ...form,\n  //     [event.target.name]: event.target.value,\n  //   });\n  // };\n\n  const {\n    handleChange,\n    values,\n    errors,\n    isValid,\n    handleBlur,\n    touched,\n    setTouched\n  } = useFormik({\n    initialValues: {\n      username: \"\",\n      email: \"\",\n      phone: \"\",\n      totalPoint: 25000,\n      cards: []\n    },\n    validationSchema: userSchema,\n    validateOnMount: true\n  });\n\n  const setAllTouched = () => {\n    const fields = [\"username\", \"email\", \"phone\"];\n    fields.forE;\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault(); //check form invalid\n\n    if (!isValid) return;\n    console.log(touched);\n    console.log(values);\n    props.dispatch(createAction(values));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isStarted ? /*#__PURE__*/React.createElement(Game, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100vw\",\n      height: \"100vh\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"diplay-4 mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \" Welcome to Pocker Center\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Fill your info and start\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"w-25 mx-auto\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"input\",\n    placeholder: \"username\",\n    name: \"username\",\n    onChange: handleChange,\n    className: \"w-100 form-control mb-3\",\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }), touched.username && errors.username && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, errors.username), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"input\",\n    placeholder: \"email\",\n    name: \"email\",\n    onChange: handleChange,\n    className: \"w-100 form-control mb-3\",\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }), touched.email && errors.email && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, errors.email), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"input\",\n    placeholder: \"phone\",\n    name: \"phone\",\n    onChange: handleChange,\n    className: \"w-100 form-control mb-3\",\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), touched.phone && errors.phone && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, errors.phone), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: !isValid,\n    className: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, \"Start new Game\"))));\n};\n\nexport default connect()(Home);","map":{"version":3,"sources":["/Users/mac/Downloads/Poker/src/pages/Home/index.jsx"],"names":["React","useState","Game","useFormik","connect","createAction","yup","userSchema","object","shape","username","string","required","email","phone","matches","Home","props","isStarted","setIsStarted","handleChange","values","errors","isValid","handleBlur","touched","setTouched","initialValues","totalPoint","cards","validationSchema","validateOnMount","setAllTouched","fields","forE","handleSubmit","event","preventDefault","console","log","dispatch","width","height","display","flexDirection","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Game from \"../Game\";\r\nimport { useFormik } from \"formik\";\r\nimport { connect } from \"react-redux\";\r\nimport { createAction } from \"../../redux/actions\";\r\nimport * as yup from \"yup\";\r\n\r\nconst userSchema = yup.object().shape({\r\n  username: yup.string().required(\"This field is required\"),\r\n  email: yup\r\n    .string()\r\n    .required(\"This field is required\")\r\n    .email(\"Email is invalid\"),\r\n  phone: yup\r\n    .string()\r\n    .required(\"This field is required\")\r\n    .matches(/^[0-9]+$/, \"Your phone have to contain numbers\"),\r\n});\r\n\r\n/*\r\nTODOLIST\r\n1. Xử lý form, lấy info người dùng nhập\r\n2. dispatch action, push user into playerLisst,\r\n3. Hiện màn hình game, ẩn form\r\n\r\nCÁC THƯ VIỆN FORM: formik, redux-form,...\r\nvalidation: yup, joi, validators,...\r\n*/\r\nconst Home = (props) => {\r\n  const [isStarted, setIsStarted] = useState(false);\r\n  // const [form, setForm] = useState({\r\n  // username: \"\",\r\n  // email: \"\",\r\n  // phone: \"\",\r\n  // totalPoint: 25000,\r\n  // cards: [],\r\n  // });\r\n  // const handleChange = (event) => {\r\n  //   setForm({\r\n  //     ...form,\r\n  //     [event.target.name]: event.target.value,\r\n  //   });\r\n  // };\r\n  const {\r\n    handleChange,\r\n    values,\r\n    errors,\r\n    isValid,\r\n    handleBlur,\r\n    touched,\r\n    setTouched,\r\n  } = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      totalPoint: 25000,\r\n      cards: [],\r\n    },\r\n    validationSchema: userSchema,\r\n    validateOnMount: true,\r\n  });\r\n  const setAllTouched = () => {\r\n    const fields = [\"username\", \"email\", \"phone\"];\r\n    fields.forE\r\n  }\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    //check form invalid\r\n    if (!isValid) return;\r\n    console.log(touched);\r\n    console.log(values);\r\n    props.dispatch(createAction(values));\r\n  };\r\n  return (\r\n    <>\r\n      {isStarted ? (\r\n        <Game />\r\n      ) : (\r\n        <div\r\n          style={{\r\n            width: \"100vw\",\r\n            height: \"100vh\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <h1 className=\"diplay-4 mb-5\"> Welcome to Pocker Center</h1>\r\n          <h3>Fill your info and start</h3>\r\n          <form className=\"w-25 mx-auto\" onSubmit={handleSubmit}>\r\n            <input\r\n              type=\"input\"\r\n              placeholder=\"username\"\r\n              name=\"username\"\r\n              onChange={handleChange}\r\n              className=\"w-100 form-control mb-3\"\r\n              onBlur={handleBlur}\r\n            />\r\n            {touched.username && errors.username && (\r\n              <p className=\"text-danger\">{errors.username}</p>\r\n            )}\r\n            <input\r\n              type=\"input\"\r\n              placeholder=\"email\"\r\n              name=\"email\"\r\n              onChange={handleChange}\r\n              className=\"w-100 form-control mb-3\"\r\n              onBlur={handleBlur}\r\n            />\r\n            {touched.email && errors.email && (\r\n              <p className=\"text-danger\">{errors.email}</p>\r\n            )}\r\n            <input\r\n              type=\"input\"\r\n              placeholder=\"phone\"\r\n              name=\"phone\"\r\n              onChange={handleChange}\r\n              className=\"w-100 form-control mb-3\"\r\n              onBlur={handleBlur}\r\n            />\r\n            {touched.phone && errors.phone && (\r\n              <p className=\"text-danger\">{errors.phone}</p>\r\n            )}\r\n\r\n            <button disabled={!isValid} className=\"btn btn-success\">\r\n              Start new Game\r\n            </button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect()(Home);\r\n"]},"metadata":{},"sourceType":"module"}