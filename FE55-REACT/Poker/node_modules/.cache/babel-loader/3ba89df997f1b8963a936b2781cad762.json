{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Downloads/Poker/src/pages/Home/index.jsx\";\nimport React, { useState, useCallback, useMemo, useEffect } from \"react\";\nimport Game from \"../Game\";\nimport { useFormik } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport * as yup from \"yup\";\n/*\r\nconst sum = useMe\r\n*/\n\nconst userSchema = yup.object().shape({\n  username: yup.string().required(\"This field is required\"),\n  email: yup.string().required(\"This field is required\").email(\"Email is invalid\"),\n  phone: yup.string().required(\"This field is required\").matches(/^[0-9]+$/, \"Your phone have to contain numbers\")\n});\n/*\r\nTODOLIST\r\n1. Xử lý form, lấy info người dùng nhập\r\n2. dispatch action, push user into playerLisst,\r\n3. Hiện màn hình game, ẩn form\r\n\r\nCÁC THƯ VIỆN FORM: formik, redux-form,...\r\nvalidation: yup, joi, validators,...\r\n*/\n\nconst Home = () => {\n  const [isStarted, setIsStarted] = useState(false);\n  const dispatch = useDispatch();\n  const {\n    handleChange,\n    values,\n    errors,\n    isValid,\n    handleBlur,\n    touched,\n    setFieldTouched,\n    setValues\n  } = useFormik({\n    initialValues: {\n      username: \"\",\n      email: \"\",\n      phone: \"\",\n      totalPoint: 25000,\n      cards: []\n    },\n    validationSchema: userSchema,\n    validateOnMount: true\n  });\n  const handleSetDefaultPlayer = useCallback(() => {\n    const defaultPlayer = {\n      username: \"danghungthai41\",\n      email: \"danghungthai@gmail.com\",\n      phone: \"123123341\",\n      totalPoint: 25000,\n      cards: []\n    };\n    setValues(defaultPlayer);\n  }, [setValues]);\n  const setAllTouched = useCallback(() => {\n    const fields = [\"username\", \"email\", \"phone\"];\n    fields.forEach(field => {\n      // console.log(field);\n      setFieldTouched(field, true);\n    });\n  }, [setFieldTouched]);\n  const handleSubmit = useCallback(event => {\n    event.preventDefault(); //check form invalid\n\n    if (!isValid) {\n      setAllTouched();\n      return;\n    } // console.log(touched);\n    // console.log(values);\n\n\n    dispatch({\n      type: \"ADD_PLAYER\",\n      payload: values\n    });\n    setIsStarted(true); // dispatch(createAction(values));\n  }, [values, isValid, dispatch, setAllTouched]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isStarted ? /*#__PURE__*/React.createElement(Game, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100vw\",\n      height: \"100vh\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"diplay-4 mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \" Welcome to Pocker Center\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Fill your info and start\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"w-25 mx-auto\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"input\",\n    placeholder: \"username\",\n    name: \"username\",\n    onChange: handleChange,\n    className: \"w-100 form-control mb-3\",\n    onBlur: handleBlur,\n    value: values.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }), touched.username && errors.username && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, errors.username), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"input\",\n    placeholder: \"email\",\n    name: \"email\",\n    onChange: handleChange,\n    className: \"w-100 form-control mb-3\",\n    onBlur: handleBlur,\n    value: values.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }), touched.email && errors.email && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, errors.email), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"input\",\n    placeholder: \"phone\",\n    name: \"phone\",\n    onChange: handleChange,\n    className: \"w-100 form-control mb-3\",\n    onBlur: handleBlur,\n    value: values.phone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }), touched.phone && errors.phone && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, errors.phone), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success w-100 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, \"Start new Game\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSetDefaultPlayer,\n    className: \"btn btn-primary w-25\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, \"Set default player\")));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/mac/Downloads/Poker/src/pages/Home/index.jsx"],"names":["React","useState","useCallback","useMemo","useEffect","Game","useFormik","useDispatch","yup","userSchema","object","shape","username","string","required","email","phone","matches","Home","isStarted","setIsStarted","dispatch","handleChange","values","errors","isValid","handleBlur","touched","setFieldTouched","setValues","initialValues","totalPoint","cards","validationSchema","validateOnMount","handleSetDefaultPlayer","defaultPlayer","setAllTouched","fields","forEach","field","handleSubmit","event","preventDefault","type","payload","width","height","display","flexDirection","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useMemo, useEffect } from \"react\";\r\nimport Game from \"../Game\";\r\nimport { useFormik } from \"formik\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as yup from \"yup\";\r\n/*\r\nconst sum = useMe\r\n*/\r\nconst userSchema = yup.object().shape({\r\n  username: yup.string().required(\"This field is required\"),\r\n  email: yup\r\n    .string()\r\n    .required(\"This field is required\")\r\n    .email(\"Email is invalid\"),\r\n  phone: yup\r\n    .string()\r\n    .required(\"This field is required\")\r\n    .matches(/^[0-9]+$/, \"Your phone have to contain numbers\"),\r\n});\r\n\r\n/*\r\nTODOLIST\r\n1. Xử lý form, lấy info người dùng nhập\r\n2. dispatch action, push user into playerLisst,\r\n3. Hiện màn hình game, ẩn form\r\n\r\nCÁC THƯ VIỆN FORM: formik, redux-form,...\r\nvalidation: yup, joi, validators,...\r\n*/\r\nconst Home = () => {\r\n  const [isStarted, setIsStarted] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    handleChange,\r\n    values,\r\n    errors,\r\n    isValid,\r\n    handleBlur,\r\n    touched,\r\n    setFieldTouched,\r\n    setValues,\r\n  } = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      totalPoint: 25000,\r\n      cards: [],\r\n    },\r\n    validationSchema: userSchema,\r\n    validateOnMount: true,\r\n  });\r\n  const handleSetDefaultPlayer = useCallback(() => {\r\n    const defaultPlayer = {\r\n      username: \"danghungthai41\",\r\n      email: \"danghungthai@gmail.com\",\r\n      phone: \"123123341\",\r\n      totalPoint: 25000,\r\n      cards: [],\r\n    };\r\n    setValues(defaultPlayer);\r\n  }, [setValues]);\r\n  const setAllTouched = useCallback(() => {\r\n    const fields = [\"username\", \"email\", \"phone\"];\r\n    fields.forEach((field) => {\r\n      // console.log(field);\r\n      setFieldTouched(field, true);\r\n    });\r\n  }, [setFieldTouched]);\r\n  const handleSubmit = useCallback(\r\n    (event) => {\r\n      event.preventDefault();\r\n      //check form invalid\r\n      if (!isValid) {\r\n        setAllTouched();\r\n        return;\r\n      }\r\n      // console.log(touched);\r\n      // console.log(values);\r\n      dispatch({\r\n        type: \"ADD_PLAYER\",\r\n        payload: values,\r\n      });\r\n      setIsStarted(true);\r\n      // dispatch(createAction(values));\r\n    },\r\n    [values, isValid, dispatch, setAllTouched]\r\n  );\r\n  return (\r\n    <>\r\n      {isStarted ? (\r\n        <Game />\r\n      ) : (\r\n        <div\r\n          style={{\r\n            width: \"100vw\",\r\n            height: \"100vh\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <h1 className=\"diplay-4 mb-5\"> Welcome to Pocker Center</h1>\r\n          <h3>Fill your info and start</h3>\r\n          <form className=\"w-25 mx-auto\" onSubmit={handleSubmit}>\r\n            <input\r\n              type=\"input\"\r\n              placeholder=\"username\"\r\n              name=\"username\"\r\n              onChange={handleChange}\r\n              className=\"w-100 form-control mb-3\"\r\n              onBlur={handleBlur}\r\n              value={values.username}\r\n            />\r\n            {touched.username && errors.username && (\r\n              <p className=\"text-danger\">{errors.username}</p>\r\n            )}\r\n            <input\r\n              type=\"input\"\r\n              placeholder=\"email\"\r\n              name=\"email\"\r\n              onChange={handleChange}\r\n              className=\"w-100 form-control mb-3\"\r\n              onBlur={handleBlur}\r\n              value={values.email}\r\n            />\r\n            {touched.email && errors.email && (\r\n              <p className=\"text-danger\">{errors.email}</p>\r\n            )}\r\n            <input\r\n              type=\"input\"\r\n              placeholder=\"phone\"\r\n              name=\"phone\"\r\n              onChange={handleChange}\r\n              className=\"w-100 form-control mb-3\"\r\n              onBlur={handleBlur}\r\n              value={values.phone}\r\n            />\r\n            {touched.phone && errors.phone && (\r\n              <p className=\"text-danger\">{errors.phone}</p>\r\n            )}\r\n            {/* disabled={!isValid} */}\r\n            <button className=\"btn btn-success w-100 mb-2\">\r\n              Start new Game\r\n            </button>\r\n          </form>\r\n          <button\r\n            onClick={handleSetDefaultPlayer}\r\n            className=\"btn btn-primary w-25\"\r\n          >\r\n            Set default player\r\n          </button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}